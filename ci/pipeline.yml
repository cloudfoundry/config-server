#fly -t production set-pipeline -p config-server -c ci/pipeline.yml --load-vars-from <(lpass show -G "config-server concourse secrets" --notes)
---
jobs:
  - name: test-golangci-lint
    public: true
    plan:
      - get: config-server
        trigger: true
      - task: test-golangci-lint
        file: config-server/ci/tasks/test-golangci-lint.yml

  - name: test-unit
    public: true
    plan:
      - get: config-server
        trigger: true
      - task: test-unit
        file: config-server/ci/tasks/test-unit.yml

  - name: test-integration-in-memory
    public: true
    plan:
      - get: integration-image
      - get: config-server
        trigger: true
      - task: test-integration
        image: integration-image
        privileged: true
        file: config-server/ci/tasks/test-integration.yml
        params:
          DB: memory

  - name: test-integration-mysql
    public: true
    plan:
      - get: main-mysql-5-7-image
      - get: config-server
        trigger: true
      - task: test-integration
        image: main-mysql-5-7-image
        privileged: true
        file: config-server/ci/tasks/test-integration.yml
        params:
          DB: mysql

  - name: test-integration-postgresql
    public: true
    plan:
      - get: config-server
        trigger: true
      - get: main-postgres-10-image
      - task: test-integration
        image: main-postgres-10-image
        privileged: true
        file: config-server/ci/tasks/test-integration.yml
        params:
          DB: postgresql
          DB_VERSION: 10

  - name: acceptance-tests
    public: true
    serial: true
    plan:
      - get: every-sunday
        trigger: true
      - get: bosh-cli
      - get: bosh-deployment
      - get: config-server
      - get: config-server-release
        trigger: true
        params: { submodules: all }
      - task: build-bosh-release
        file: config-server-release/ci/tasks/bosh-release.yml
      - task: run-acceptance-tests
        file: config-server-release/ci/tasks/acceptance-tests.yml
        privileged: true

  - name: bump-config-server-submodule
    public: true
    plan:
      - get: config-server-release
        params: { submodules: all }
        passed: [acceptance-tests]
        trigger: true
      - get: config-server
        passed: [build]
        trigger: true
      - get: bosh-cli
      - task: bosh-release
        file: config-server-release/ci/tasks/bump-submodule.yml
      - put: config-server-release
        params:
          repository: config-server-repo/config-server-release

  - name: build
    public: true
    plan:
      - in_parallel:
        - get: config-server
          passed: [test-golangci-lint, test-unit, test-integration-in-memory, test-integration-mysql, test-integration-postgresql]
          trigger: true
        - get: version-semver
          params: {bump: patch}
      - {put: version-semver, params: {file: version-semver/number}}
      - in_parallel:
        - task: build-linux
          file: config-server/ci/tasks/build-linux.yml
        - task: build-darwin
          file: config-server/ci/tasks/build-darwin.yml
      - in_parallel:
        - {put: release-bucket-linux, params: {file: compiled-linux/config-server-*-linux-amd64}}
        - {put: release-bucket-darwin, params: {file: compiled-darwin/config-server-*-darwin-amd64}}
        - {put: config-server-promoted, params: {repository: config-server, tag: version-semver/number, tag_prefix: v}}

  - name: bump-minor
    public: true
    plan:
      - get: version-semver
        params: {bump: minor}
      - {put: version-semver, params: {file: version-semver/number}}

  - name: bump-major
    public: true
    plan:
      - get: version-semver
        params: {bump: major}
      - {put: version-semver, params: {file: version-semver/number}}

  - name: bump-golang-packages
    plan:
    - in_parallel:
      - get: config-server-release
      - get: golang-release
        trigger: true
    - task: bump-golang-packages
      file: golang-release/ci/tasks/shared/bump-golang-package.yml
      input_mapping:
        input_repo: config-server-release
      output_mapping:
        output_repo: bumped-config-server-release
      params:
        PACKAGES: [golang-1-linux]
        PRIVATE_YML: |
          ---
          blobstore:
            options:
              access_key_id: ((assume_aws_access_key.username))
              secret_access_key: ((assume_aws_access_key.password))
              assume_role_arn: ((assume_aws_access_key.role_arn))
    - put: config-server-release
      params:
        repository: bumped-config-server-release
        rebase: true

  - name: bump-deps
    plan:
    - in_parallel:
      - get: config-server
      - get: golang-release
      - get: weekly
        trigger: true
    - task: bump-deps
      file: golang-release/ci/tasks/shared/bump-deps.yml
      input_mapping:
        input_repo: config-server
      output_mapping:
        output_repo: bumped-config-server
    - task: test-unit
      file: config-server/ci/tasks/test-unit.yml
      input_mapping:
        config-server: bumped-config-server
    - put: config-server
      params:
        repository: bumped-config-server
        rebase: true

resources:
  - name: main-postgres-10-image
    type: docker-image
    source:
      repository: bosh/main-postgres-10
      tag: main

  - name: main-mysql-5-7-image
    type: docker-image
    source:
      repository: bosh/main-mysql-5.7
      tag: main
      username: ((docker.username))
      password: ((docker.password))

  - name: integration-image
    type: docker-image
    source:
      repository: bosh/integration
      tag: main

  - name: config-server
    type: git
    source:
      uri: git@github.com:cloudfoundry/config-server.git
      branch: develop
      private_key: ((github_deploy_key_config-server.private_key))

  - name: config-server-promoted
    type: git
    source:
      uri: git@github.com:cloudfoundry/config-server.git
      branch: master
      private_key: ((github_deploy_key_config-server.private_key))

  - name: config-server-release
    type: git
    source:
      uri: git@github.com:cloudfoundry/config-server-release.git
      branch: master
      private_key: ((github_deploy_key_config-server-release.private_key))

  - name: bosh-deployment
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/bosh-deployment.git
      version: f1ee4f5bdd2c4d26ae1f7e937a1cf46c1cac9b53

  - name: golang-release
    type: git
    source:
      uri: https://github.com/bosh-packages/golang-release.git

  - name: release-bucket-linux
    type: s3
    source:
      regexp: config-server-(.*)-linux-amd64
      bucket: config-server-releases
      region_name: us-east-1
      access_key_id: ((config-server-release-admin_assume_aws_access_key.username))
      secret_access_key: ((config-server-release-admin_assume_aws_access_key.password))
      aws_role_arn: ((config-server-release-admin_assume_aws_access_key.role_arn))

  - name: release-bucket-darwin
    type: s3
    source:
      regexp: config-server-(.*)-darwin-amd64
      bucket: config-server-releases
      region_name: us-east-1
      access_key_id: ((config-server-release-admin_assume_aws_access_key.username))
      secret_access_key: ((config-server-release-admin_assume_aws_access_key.password))
      aws_role_arn: ((config-server-release-admin_assume_aws_access_key.role_arn))

  - name: version-semver
    type: semver
    source:
      initial_version: 0.0.20
      key: current-version
      bucket: config-server-releases
      access_key_id: ((config-server-release-admin_assume_aws_access_key.username))
      secret_access_key: ((config-server-release-admin_assume_aws_access_key.password))
      assume_role_arn: ((config-server-release-admin_assume_aws_access_key.role_arn))

  - name: bosh-cli
    type: s3
    source:
      bucket: bosh-cli-artifacts
      regexp: bosh-cli-(.*)-linux-amd64

  - name: every-sunday
    type: time
    source:
      start: 1:00 PM
      stop: 9:00 PM
      days: [Sunday]

  - name: weekly
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [ Saturday ]

resource_types:
- name: semver
  type: docker-image
  source:
    repository: concourse/semver-resource
    tag: 1.6